from fastapi import FastAPI, Request
from pymongo import MongoClient
from dotenv import load_dotenv
import os
import google.generativeai as genai
import certifi

app = FastAPI()
load_dotenv()

# חיבור ל-MongoDB
mongo_uri = os.getenv("MONGO_URI")
client = MongoClient(mongo_uri, tls=True, tlsCAFile=certifi.where())
db = client["your_database_name"]





# חיבור ל-Gemini ורשימת מודלים
genai.configure(api_key=os.getenv("GEMINI_API_KEY"))

# הדפסת רשימת המודלים הזמינים
print("מודלים זמינים:")
for model in genai.list_models():
    print(model.name)

model = genai.GenerativeModel("gemini-pro")  # נשאיר את זה לעת עתה, נתקן בהמשך

@app.post("/chat")
async def chat(request: Request):
    data = await request.json()
    message = data.get("message")
    token = request.cookies.get("auth_token")

    company_id = data.get("companyId")  # נניח שזה נשלח מה-Node.js

    # שליפת נתונים מ-MongoDB לפי companyId
    budget_data = db["Budget"].find({"companyId": company_id})
    customer_data = db["Customer"].find({"companyId": company_id})

    context = f"נתוני תקציב: {list(budget_data)}\nנתוני לקוחות: {list(customer_data)}"
    prompt = f"{context}\nשאלה: {message}"

    response = model.generate_content(prompt)
    reply = response.text

    return {"reply": reply}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
